import {
  require_prop_types
} from "./chunk-PUHH75AR.js";
import {
  require_react_dom
} from "./chunk-CIQVVTPY.js";
import {
  require_react
} from "./chunk-ZOIWZPCO.js";
import {
  __commonJS
} from "./chunk-DFKQJ226.js";

// node_modules/react-frame-component/lib/Context.js
var require_Context = __commonJS({
  "node_modules/react-frame-component/lib/Context.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.FrameContextConsumer = exports.FrameContextProvider = exports.useFrame = exports.FrameContext = void 0;
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var doc = void 0;
    var win = void 0;
    if (typeof document !== "undefined") {
      doc = document;
    }
    if (typeof window !== "undefined") {
      win = window;
    }
    var FrameContext = exports.FrameContext = _react2.default.createContext({ document: doc, window: win });
    var useFrame = exports.useFrame = function useFrame2() {
      return _react2.default.useContext(FrameContext);
    };
    var FrameContextProvider = FrameContext.Provider;
    var FrameContextConsumer = FrameContext.Consumer;
    exports.FrameContextProvider = FrameContextProvider;
    exports.FrameContextConsumer = FrameContextConsumer;
  }
});

// node_modules/react-frame-component/lib/Content.js
var require_Content = __commonJS({
  "node_modules/react-frame-component/lib/Content.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Content = function(_Component) {
      _inherits(Content2, _Component);
      function Content2() {
        _classCallCheck(this, Content2);
        return _possibleConstructorReturn(this, (Content2.__proto__ || Object.getPrototypeOf(Content2)).apply(this, arguments));
      }
      _createClass(Content2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.props.contentDidMount();
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
          this.props.contentDidUpdate();
        }
      }, {
        key: "render",
        value: function render() {
          return _react.Children.only(this.props.children);
        }
      }]);
      return Content2;
    }(_react.Component);
    Content.propTypes = {
      children: _propTypes2.default.element.isRequired,
      contentDidMount: _propTypes2.default.func.isRequired,
      contentDidUpdate: _propTypes2.default.func.isRequired
    };
    exports.default = Content;
  }
});

// node_modules/react-frame-component/lib/Frame.js
var require_Frame = __commonJS({
  "node_modules/react-frame-component/lib/Frame.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Frame = void 0;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _reactDom = require_react_dom();
    var _reactDom2 = _interopRequireDefault(_reactDom);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _Context = require_Context();
    var _Content = require_Content();
    var _Content2 = _interopRequireDefault(_Content);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Frame = exports.Frame = function(_Component) {
      _inherits(Frame2, _Component);
      function Frame2(props, context) {
        _classCallCheck(this, Frame2);
        var _this = _possibleConstructorReturn(this, (Frame2.__proto__ || Object.getPrototypeOf(Frame2)).call(this, props, context));
        _this.setRef = function(node) {
          _this.nodeRef.current = node;
          var forwardedRef = _this.props.forwardedRef;
          if (typeof forwardedRef === "function") {
            forwardedRef(node);
          } else if (forwardedRef) {
            forwardedRef.current = node;
          }
        };
        _this.handleLoad = function() {
          clearInterval(_this.loadCheck);
          if (!_this.state.iframeLoaded) {
            _this.setState({ iframeLoaded: true });
          }
        };
        _this.loadCheck = function() {
          return setInterval(function() {
            _this.handleLoad();
          }, 500);
        };
        _this._isMounted = false;
        _this.nodeRef = _react2.default.createRef();
        _this.state = { iframeLoaded: false };
        return _this;
      }
      _createClass(Frame2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this._isMounted = true;
          var doc = this.getDoc();
          if (doc) {
            this.nodeRef.current.contentWindow.addEventListener("DOMContentLoaded", this.handleLoad);
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this._isMounted = false;
          this.nodeRef.current.removeEventListener("DOMContentLoaded", this.handleLoad);
        }
      }, {
        key: "getDoc",
        value: function getDoc() {
          return this.nodeRef.current ? this.nodeRef.current.contentDocument : null;
        }
      }, {
        key: "getMountTarget",
        value: function getMountTarget() {
          var doc = this.getDoc();
          if (this.props.mountTarget) {
            return doc.querySelector(this.props.mountTarget);
          }
          return doc.body.children[0];
        }
        // In certain situations on a cold cache DOMContentLoaded never gets called
        // fallback to an interval to check if that's the case
      }, {
        key: "renderFrameContents",
        value: function renderFrameContents() {
          if (!this._isMounted) {
            return null;
          }
          var doc = this.getDoc();
          if (!doc) {
            return null;
          }
          var contentDidMount = this.props.contentDidMount;
          var contentDidUpdate = this.props.contentDidUpdate;
          var win = doc.defaultView || doc.parentView;
          var contents = _react2.default.createElement(
            _Content2.default,
            {
              contentDidMount,
              contentDidUpdate
            },
            _react2.default.createElement(
              _Context.FrameContextProvider,
              { value: { document: doc, window: win } },
              _react2.default.createElement(
                "div",
                { className: "frame-content" },
                this.props.children
              )
            )
          );
          var mountTarget = this.getMountTarget();
          return [_reactDom2.default.createPortal(this.props.head, this.getDoc().head), _reactDom2.default.createPortal(contents, mountTarget)];
        }
      }, {
        key: "render",
        value: function render() {
          var props = _extends({}, this.props, {
            srcDoc: this.props.initialContent,
            children: void 0
            // The iframe isn't ready so we drop children from props here. #12, #17
          });
          delete props.head;
          delete props.initialContent;
          delete props.mountTarget;
          delete props.contentDidMount;
          delete props.contentDidUpdate;
          delete props.forwardedRef;
          return _react2.default.createElement(
            "iframe",
            _extends({}, props, { ref: this.setRef, onLoad: this.handleLoad }),
            this.state.iframeLoaded && this.renderFrameContents()
          );
        }
      }]);
      return Frame2;
    }(_react.Component);
    Frame.propTypes = {
      style: _propTypes2.default.object,
      // eslint-disable-line
      head: _propTypes2.default.node,
      initialContent: _propTypes2.default.string,
      mountTarget: _propTypes2.default.string,
      contentDidMount: _propTypes2.default.func,
      contentDidUpdate: _propTypes2.default.func,
      children: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.arrayOf(_propTypes2.default.element)])
    };
    Frame.defaultProps = {
      style: {},
      head: null,
      children: void 0,
      mountTarget: void 0,
      contentDidMount: function contentDidMount() {
      },
      contentDidUpdate: function contentDidUpdate() {
      },
      initialContent: '<!DOCTYPE html><html><head></head><body><div class="frame-root"></div></body></html>'
    };
    exports.default = _react2.default.forwardRef(function(props, ref) {
      return _react2.default.createElement(Frame, _extends({}, props, { forwardedRef: ref }));
    });
  }
});

// node_modules/react-frame-component/lib/index.js
var require_lib = __commonJS({
  "node_modules/react-frame-component/lib/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _Frame = require_Frame();
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_Frame).default;
      }
    });
    var _Context = require_Context();
    Object.defineProperty(exports, "FrameContext", {
      enumerable: true,
      get: function get() {
        return _Context.FrameContext;
      }
    });
    Object.defineProperty(exports, "FrameContextConsumer", {
      enumerable: true,
      get: function get() {
        return _Context.FrameContextConsumer;
      }
    });
    Object.defineProperty(exports, "useFrame", {
      enumerable: true,
      get: function get() {
        return _Context.useFrame;
      }
    });
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});
export default require_lib();
//# sourceMappingURL=react-frame-component.js.map
